geom_line(aes(y = mean_absolute_error)) +
geom_line(aes(y = val_mean_absolute_error))
ggplot(btc_training, aes(x = X)) +
geom_line(aes(y = val_loss)) +
geom_line(aes(y = val_mean_absolute_error))
ggplot(btc_training, aes(x = X)) +
geom_line(aes(y = val_loss)) +
geom_line(aes(y = val_mean_absolute_error))
ggplot(btc_training, aes(x = X)) +
geom_line(aes(y = mean_absolute_error)) +
geom_line(aes(y = val_mean_absolute_error))
ggplot(btc_training, aes(x = X)) +
geom_line(aes(y = loss), color='red') +
geom_line(aes(y = mean_absolute_error)) +
geom_line(aes(y = val_loss)) +
geom_line(aes(y = val_mean_absolute_error))
ggplot(btc_training, aes(x = X)) +
geom_line(aes(y = loss), color='red') +
geom_line(aes(y = mean_absolute_error)) +
geom_line(aes(y = val_loss)) +
geom_line(aes(y = val_mean_absolute_error))
ggplot(btc_training, aes(x = X)) +
geom_line(aes(y = loss), color='red') +
geom_line(aes(y = mean_absolute_error)) +
geom_line(aes(y = val_loss)) +
geom_line(aes(y = val_mean_absolute_error))
ggplot(btc_training, aes(x = X)) +
geom_line(aes(y = loss), color='red') +
geom_line(aes(y = mean_absolute_error), color='green') +
geom_line(aes(y = val_loss)) +
geom_line(aes(y = val_mean_absolute_error))
geom_line(aes(y = val_loss), color='blue) +
ggplot(btc_training, aes(x = X)) +
geom_line(aes(y = loss), color='red') +
ggplot(btc_training, aes(x = X)) +
geom_line(aes(y = loss), color='red') +
geom_line(aes(y = mean_absolute_error), color='green') +
geom_line(aes(y = val_loss), color='blue') +
geom_line(aes(y = val_mean_absolute_error))
ggplot(btc_training, aes(x = X)) +
geom_line(aes(y = loss), color='red') +
geom_line(aes(y = mean_absolute_error), color='green') +
geom_line(aes(y = val_loss), color='blue') +
geom_line(aes(y = val_mean_absolute_error), color='yellow')
ggplot(btc_training, aes(x = X)) +
geom_line(aes(y = val_loss)) +
geom_line(aes(y = val_mean_absolute_error))
ggplot(btc_training, aes(x = X)) +
geom_line(aes(y = loss), color='red') +
geom_line(aes(y = mean_absolute_error), color='green') +
geom_line(aes(y = val_loss), color='blue') +
geom_line(aes(y = val_mean_absolute_error), color='yellow')
ggplot(btc_training, aes(x = X)) +
geom_line(aes(y = mean_absolute_error), color='green') +
geom_line(aes(y = val_loss), color='blue') +
geom_line(aes(y = val_mean_absolute_error), color='yellow')
ggplot(btc_training, aes(x = X)) +
geom_line(aes(y = mean_absolute_error), color='green') +
geom_line(aes(y = val_mean_absolute_error), color='yellow')
ggplot(btc_training, aes(x = X)) +
geom_line(aes(y = loss), color='red') +
geom_line(aes(y = mean_absolute_error), color='green') +
geom_line(aes(y = val_loss), color='blue') +
geom_line(aes(y = val_mean_absolute_error), color='yellow')
btc_training <- read.csv("data/training/BTC_USDT_1hr_0.5_0.3_1_8_2_training.csv")
btc_training
btc_training.pivot_longer()
pivot_longer(btc_training, )
pivot_longer(btc_training, cols = loss)
pivot_longer(btc_training, values_to = loss)
btc_training
pivot_longer(btc_training, cols=c("mean_absolute_error", "val_loss", "val_mean_absolute_error", "loss"))
pivot_longer(btc_training, cols=c("mean_absolute_error", "val_loss", "val_mean_absolute_error", "loss"), names_to = 'values')
pivot_longer(btc_training, cols=c("mean_absolute_error", "val_loss", "val_mean_absolute_error", "loss"), names_to = 'type')
btc_training <- pivot_longer(
btc_training,
cols=c("mean_absolute_error", "val_loss", "val_mean_absolute_error", "loss"),
names_to = 'type'
)
ggplot(
btc_training,
aes(x = X)
) +
geom_line(
aes(
y = value,
color = type
)
)
ggplot(
btc_training,
aes(x = X)
) +
geom_line(
aes(
y = value,
color = type
)
) +
labs(
x = "Epochs",
y = "Values"
)
ggplot(
btc_training,
aes(x = X)
) +
geom_line(
aes(
y = value,
color = type
)
) +
labs(
x = "Epochs",
y = "Values"
) +
theme(
legend.title = "Metrics type"
)
ggplot(
btc_training,
aes(x = X)
) +
geom_line(
aes(
y = value,
color = type
)
) +
labs(
x = "Epochs",
y = "Values",
color = "Metrics"
)
ggplot(
btc_training,
aes(x = X)
) +
geom_line(
aes(
y = value,
color = type
)
) +
labs(
x = "Epochs",
y = "Values",
color = "Metrics",
title = "Training Progress for BTC 1-hour",
caption = "Data from Binance.com"
)
ggplot(
btc_training,
aes(x = X)
) +
geom_line(
aes(
y = value,
color = type
)
) +
labs(
x = "Epochs",
y = "Values",
color = "Metrics",
title = "Training Progress for BTC 1-hour",
caption = "Data from Binance.com"
) +
theme(
legend.position = "bottom"
)
ggplot(
btc_training,
aes(x = X)
) +
geom_line(
aes(
y = value,
color = type
)
) +
labs(
x = "Epochs",
y = "Values",
color = "Metrics",
title = "Training Progress for BTC 1-hour",
subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
caption = "Data from Binance.com"
) +
theme(
legend.position = "bottom"
)
ggplot(
btc_training,
aes(x = X)
) +
geom_line(
aes(
y = value,
color = type
)
) +
labs(
x = "Epochs",
y = "Values",
color = "Metrics",
title = "Training Progress for BTC 1-hour",
subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
caption = "Data from Binance.com"
) +
theme(
legend.position = "bottom"
)
btc_prediction <- read.csv("data/training/BTC_USDT_1hr_0.5_0.3_1_8_2_prediction.csv")
btc_prediction <- read.csv("data/training/BTC_USDT_1hr_0.5_0.3_1_8_2_prediction.csv)
btc_prediction <- read.csv("data/training/BTC_USDT_1hr_0.5_0.3_1_8_2_prediction.csv")
btc_prediction
pivot_longer(btc_prediction, cols=c("test", "prediction"), names_to = "type")
ggplot(
btc_prediction,
) +
geom_line(
aes(
y = value,
color = type
)
)
btc_prediction <- pivot_longer(
btc_prediction,
cols=c("test", "prediction"),
names_to = "type"
)
ggplot(
btc_prediction,
) +
geom_line(
aes(
y = value,
color = type
)
)
ggplot(
btc_prediction,
) +
geom_line(
aes(
x = X
y = value,
ggplot(
btc_prediction,
) +
geom_line(
aes(
x = X,
y = value,
color = type
)
)
ggplot(
btc_prediction,
) +
geom_line(
aes(
x = X,
y = value,
color = type
)
) +
labs(
x = "Trading session",
y = "Long Utility (scaled)",
color = "Metrics",
title = "Long Utility Prediction for BTC 1-hour",
subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
caption = "Data from Binance.com"
) +
theme(
legend.position = "bottom"
)
ggplot(
btc_prediction,
) +
geom_line(
aes(
x = X,
y = value,
color = type
)
) +
labs(
x = "Trading session",
y = "Long Utility (scaled)",
color = "Long Utility type",
title = "Long Utility Prediction for BTC 1-hour",
subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
caption = "Data from Binance.com"
) +
theme(
legend.position = "bottom"
)
#| label: ETH training progress
eth_training <- read.csv("data/training/ETH_USDT_1hr_0.5_0.3_1_8_2_training.csv")
eth_training <- pivot_longer(
eth_training,
cols=c("mean_absolute_error", "val_loss", "val_mean_absolute_error", "loss"),
names_to = 'type'
)
ggplot(
eth_training,
aes(x = X)
) +
geom_line(
aes(
y = value,
color = type
)
) +
labs(
x = "Epochs",
y = "Values",
color = "Metrics",
title = "Training Progress for ETH 1-hour",
subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
caption = "Data from Binance.com"
) +
theme(
legend.position = "bottom"
)
btc_prediction <- read.csv("data/training/ETH_USDT_1hr_0.5_0.3_1_8_2_prediction.csv")
btc_prediction <- pivot_longer(
btc_prediction,
cols=c("test", "prediction"),
names_to = "type"
)
ggplot(
btc_prediction,
) +
geom_line(
aes(
x = X,
y = value,
color = type
)
) +
labs(
x = "Trading session",
y = "Long Utility (scaled)",
color = "Long Utility type",
title = "Long Utility Prediction for BTC 1-hour",
subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
caption = "Data from Binance.com"
) +
theme(
legend.position = "bottom"
)
ggplot(
btc_prediction,
) +
geom_line(
aes(
x = X,
y = value,
color = type
)
) +
labs(
x = "Trading session",
y = "Long Utility (scaled)",
color = "Long Utility type",
title = "Long Utility Prediction for ETH 1-hour",
subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
caption = "Data from Binance.com"
) +
theme(
legend.position = "bottom"
)
#| label: ADA training progress
eth_training <- read.csv("data/training/ADA_USDT_1hr_0.5_0.3_1_8_2_training.csv")
eth_training <- pivot_longer(
eth_training,
cols=c("mean_absolute_error", "val_loss", "val_mean_absolute_error", "loss"),
names_to = 'type'
)
ggplot(
eth_training,
aes(x = X)
) +
geom_line(
aes(
y = value,
color = type
)
) +
labs(
x = "Epochs",
y = "Values",
color = "Metrics",
title = "Training Progress for ADA 1-hour",
subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
caption = "Data from Binance.com"
) +
theme(
legend.position = "bottom"
)
btc_prediction <- read.csv("data/training/ADA_USDT_1hr_0.5_0.3_1_8_2_prediction.csv")
btc_prediction <- pivot_longer(
btc_prediction,
cols=c("test", "prediction"),
names_to = "type"
)
ggplot(
btc_prediction,
) +
geom_line(
aes(
x = X,
y = value,
color = type
)
) +
labs(
x = "Trading session",
y = "Long Utility (scaled)",
color = "Long Utility type",
title = "Long Utility Prediction for ADA 1-hour",
subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
caption = "Data from Binance.com"
) +
theme(
legend.position = "bottom"
)
#| label: DOGE training progress
eth_training <- read.csv("data/training/DOGE_USDT_1hr_0.5_0.3_1_8_2_training.csv")
#| label: DOGE training progress
doge_training <- read.csv("data/training/DOGE_USDT_1hr_0.5_0.3_1_8_2_training.csv")
#| label: DOGE training progress
doge_training <- read.csv("data/training/DOGE_USDT_1hr_0.5_0.3_1_8_2_training.csv")
doge_training <- pivot_longer(
doge_training,
cols=c("mean_absolute_error", "val_loss", "val_mean_absolute_error", "loss"),
names_to = 'type'
)
ggplot(
doge_training,
aes(x = X)
) +
geom_line(
aes(
y = value,
color = type
)
) +
labs(
x = "Epochs",
y = "Values",
color = "Metrics",
title = "Training Progress for DOGE 1-hour",
subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
caption = "Data from Binance.com"
) +
theme(
legend.position = "bottom"
)
ggplot(
doge_prediction,
) +
geom_line(
aes(
x = X,
y = value,
color = type
)
) +
labs(
x = "Trading session",
y = "Long Utility (scaled)",
color = "Long Utility type",
title = "Long Utility Prediction for DOGE 1-hour",
subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
caption = "Data from Binance.com"
) +
theme(
legend.position = "bottom"
)
doge_prediction <- read.csv("data/training/DOGE_USDT_1hr_0.5_0.3_1_8_2_prediction.csv")
doge_prediction <- pivot_longer(
doge_prediction,
cols=c("test", "prediction"),
names_to = "type"
)
ggplot(
doge_prediction,
) +
geom_line(
aes(
x = X,
y = value,
color = type
)
) +
labs(
x = "Trading session",
y = "Long Utility (scaled)",
color = "Long Utility type",
title = "Long Utility Prediction for DOGE 1-hour",
subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
caption = "Data from Binance.com"
) +
theme(
legend.position = "bottom"
)
