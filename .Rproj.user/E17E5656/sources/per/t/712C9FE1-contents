---
title: "data_visualization"
---

```{r}
library(fs)
library(dplyr)
library(lubridate)
library(tidyverse)
library(scales)
library(patchwork)

theme_set(theme_minimal())

# dimension 825 x 465
```

# EMA

```{r BTC}
list_of_files <- dir_ls(path = "../data", regexp = "BTC")
btc <- read_csv(list_of_files, id = "alpha")

btc <- btc %>% 
  mutate(
    separate(btc, col=alpha, into=c('_', 'hr_alpha'), sep="_USDT_")
    )

btc <- btc %>% 
  mutate(
    separate(btc, col=hr_alpha, into=c('time_frame', 'alpha', '_ema'), sep='_')
  ) %>% 
  select(close_time_parsed, close, close_ema, time_frame, alpha)

btc <- btc %>% 
  mutate(
    across(time_frame, factor, levels=c("1hr","12hr","1wk"))
  )

# plot
ggplot(
  btc,
) +
  geom_line(
    aes(
      x = close_time_parsed,
      y = close,
    )
  ) +
  geom_line(
    aes(
      x = close_time_parsed,
      y = close_ema,
      color = alpha
    )
  ) +
  
  scale_y_continuous(
    labels = label_number(
      suffix = "K", 
      scale = 1e-3
    )
    ) +
  
  facet_wrap(~time_frame, ncol = 1) +
  labs(
    x = "Time",
    y = "USDT",
    title = "BTC prices in USDT",
    subtitle = "By alpha levels of EMA",
    caption = "Data from Binance.com"
  ) +
  theme(
    legend.position = "bottom"
  )
```

```{r ETH}
list_of_files <- dir_ls(path = "../data", regexp = "ETH")
eth <- read_csv(list_of_files, id = "alpha")

eth <- eth %>% 
  mutate(
    separate(eth, col=alpha, into=c('_', 'hr_alpha'), sep="_USDT_")
    )

eth <- eth %>% 
  mutate(
    separate(eth, col=hr_alpha, into=c('time_frame', 'alpha', '_ema'), sep='_')
  ) %>% 
  select(close_time_parsed, close, close_ema, time_frame, alpha)

eth <- eth %>% 
  mutate(
    across(time_frame, factor, levels=c("1hr","12hr","1wk"))
  )

# plot
ggplot(
  eth,
) +
  geom_line(
    aes(
      x = close_time_parsed,
      y = close,
    )
  ) +
  geom_line(
    aes(
      x = close_time_parsed,
      y = close_ema,
      color = alpha
    )
  ) +
  
  scale_y_continuous(
    labels = label_number(
      suffix = "K", 
      scale = 1e-3
    )
    ) +
  
  facet_wrap(~time_frame, ncol = 1) +
  theme_minimal() +
  labs(
    x = "Time",
    y = "USDT",
    title = "ETH prices in USDT",
    subtitle = "By alpha levels of EMA",
    caption = "Data from Binance.com"
  ) +
  theme(
    legend.position = "bottom"
  )
```

```{r ADA}
list_of_files <- dir_ls(path = "../data", regexp = "ADA")
ada <- read_csv(list_of_files, id = "alpha")

ada <- ada %>% 
  mutate(
    separate(ada, col=alpha, into=c('_', 'hr_alpha'), sep="_USDT_")
    )

ada <- ada %>% 
  mutate(
    separate(ada, col=hr_alpha, into=c('time_frame', 'alpha', '_ema'), sep='_')
  ) %>% 
  select(close_time_parsed, close, close_ema, time_frame, alpha)

ada <- ada %>% 
  mutate(
    across(time_frame, factor, levels=c("1hr","12hr","1wk"))
  )

# plot
ggplot(
  ada,
) +
  geom_line(
    aes(
      x = close_time_parsed,
      y = close,
    )
  ) +
  geom_line(
    aes(
      x = close_time_parsed,
      y = close_ema,
      color = alpha
    )
  ) +
  
  facet_wrap(~time_frame, ncol = 1) +
  theme_minimal() +
  labs(
    x = "Time",
    y = "USDT",
    title = "ADA prices in USDT",
    subtitle = "By alpha levels of EMA",
    caption = "Data from Binance.com"
  ) +
  theme(
    legend.position = "bottom"
  )
```

```{r DOGE}
list_of_files <- dir_ls(path = "../data", regexp = "DOGE")
doge <- read_csv(list_of_files, id = "alpha")

doge <- doge %>% 
  mutate(
    separate(doge, col=alpha, into=c('_', 'hr_alpha'), sep="_USDT_")
    )

doge <- doge %>% 
  mutate(
    separate(doge, col=hr_alpha, into=c('time_frame', 'alpha', '_ema'), sep='_')
  ) %>% 
  select(close_time_parsed, close, close_ema, time_frame, alpha)

doge <- doge %>% 
  mutate(
    across(time_frame, factor, levels=c("1hr","12hr","1wk"))
  )

# plot
ggplot(
  doge,
) +
  geom_line(
    aes(
      x = close_time_parsed,
      y = close,
    )
  ) +
  geom_line(
    aes(
      x = close_time_parsed,
      y = close_ema,
      color = alpha
    )
  ) +
  
  facet_wrap(~time_frame, ncol = 1) +
  theme_minimal() +
  labs(
    x = "Time",
    y = "USDT",
    title = "DOGE prices in USDT",
    subtitle = "By alpha levels of EMA",
    caption = "Data from Binance.com"
  ) +
  theme(
    legend.position = "bottom"
  )
```

## Trend

```{r}
list_of_files <- dir_ls(path = "../data", regexp = "BTC")
btc_uptrend <- read_csv(list_of_files, id = "alpha")

btc_uptrend <- btc_uptrend %>% 
  mutate(
    separate(btc_uptrend, col=alpha, into=c('_', 'hr_alpha'), sep="_USDT_")
    )

btc_uptrend <- btc_uptrend %>% 
  mutate(
    separate(btc_uptrend, col=hr_alpha, into=c('time_frame', 'alpha', '_ema'), sep='_')
  ) %>% 
  select(close_time_parsed, close, close_ema, time_frame, alpha)

btc_uptrend <- btc_uptrend %>% 
  filter(time_frame == "1hr" & close_time_parsed >= ymd("2021-02-01") & close_time_parsed <= ymd("2021-02-15"))

# plot
ggplot(
  btc_uptrend,
) +
  geom_line(
    aes(
      x = close_time_parsed,
      y = close,
    )
  ) +
  
  scale_y_continuous(
    labels = label_number(
      suffix = "K", 
      scale = 1e-3
    )
    ) +
  
  theme_minimal() +
  labs(
    x = "Time (2021)",
    y = "USDT",
    title = "BTC prices in USDT (uptrend)",
    caption = "Data from Binance.com"
  ) +
  theme(
    legend.position = "bottom"
  )
```

```{r}
list_of_files <- dir_ls(path = "../data", regexp = "BTC")
btc_uptrend <- read_csv(list_of_files, id = "alpha")

btc_uptrend <- btc_uptrend %>% 
  mutate(
    separate(btc_uptrend, col=alpha, into=c('_', 'hr_alpha'), sep="_USDT_")
    )

btc_uptrend <- btc_uptrend %>% 
  mutate(
    separate(btc_uptrend, col=hr_alpha, into=c('time_frame', 'alpha', '_ema'), sep='_')
  ) %>% 
  select(close_time_parsed, close, close_ema, time_frame, alpha)

btc_uptrend <- btc_uptrend %>% 
  filter(time_frame == "1hr" & close_time_parsed >= ymd("2021-04-15") & close_time_parsed <= ymd("2021-04-25"))

# plot
ggplot(
  btc_uptrend,
) +
  geom_line(
    aes(
      x = close_time_parsed,
      y = close,
    )
  ) +
  
  scale_y_continuous(
    labels = label_number(
      suffix = "K", 
      scale = 1e-3
    )
    ) +
  
  theme_minimal() +
  labs(
    x = "Time (2021)",
    y = "USDT",
    title = "BTC prices in USDT (downtrend)",
    caption = "Data from Binance.com"
  ) +
  theme(
    legend.position = "bottom"
  )
```
## Long Utility Labeling
### BTC

```{r}
#| label: BTC full utility label chart

btc_long_utility <- read_csv("data/labeled/BTC_USDT_1hr_0.5_0.3_1_8_2_long_utility.csv")


p1 <- ggplot( btc_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = close_ema)) + labs(x = NULL, y = "Close EMA")

p2 <- ggplot( btc_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = long_utility)) + labs(x = NULL, y = "Long Utility")

p3 <- ggplot( btc_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = long_utility_context_ema)) + labs(x = NULL, y = "Long Utility (scaled)")

pw <- p1 / p2 / p3
pw +plot_annotation(
  title = "Utility Labeling for BTC 1-hour",
  subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
  caption = "Data from Binance.com"
)
```

```{r}
#| label: BTC utility label uptrend chart

btc_long_utility <- read_csv("data/labeled/BTC_USDT_1hr_0.5_0.3_1_8_2_long_utility.csv")
btc_long_utility <- btc_long_utility %>% 
  filter(close_time_parsed >= ymd("2021-02-01") & close_time_parsed <= ymd("2021-02-20"))

p1 <- ggplot( btc_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = close_ema)) + labs(x = NULL, y = "Close EMA")

p2 <- ggplot( btc_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = long_utility)) + labs(x = NULL, y = "Long Utility")

p3 <- ggplot( btc_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = long_utility_context_ema)) + labs(x = NULL, y = "Long Utility (scaled)")

pw <- p1 / p2 / p3
pw +plot_annotation(
  title = "Utility Labeling for BTC 1-hour (uptrend)",
  subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
  caption = "Data from Binance.com"
)
```

```{r}
#| label: BTC utility label downtrend chart

btc_long_utility <- read_csv("data/labeled/BTC_USDT_1hr_0.5_0.3_1_8_2_long_utility.csv")
btc_long_utility <- btc_long_utility %>% 
  filter(close_time_parsed >= ymd("2021-05-10") & close_time_parsed <= ymd("2021-05-30"))

p1 <- ggplot( btc_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = close_ema)) + labs(x = NULL, y = "Close EMA")

p2 <- ggplot( btc_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = long_utility)) + labs(x = NULL, y = "Long Utility")

p3 <- ggplot( btc_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = long_utility_context_ema)) + labs(x = NULL, y = "Long Utility (scaled)")

pw <- p1 / p2 / p3
pw +plot_annotation(
  title = "Utility Labeling for BTC 1-hour (downtrend)",
  subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
  caption = "Data from Binance.com"
)
```

### ETH
```{r}
#| label: ETH full utility label chart

eth_long_utility <- read_csv("data/labeled/ETH_USDT_1hr_0.5_0.3_1_8_2_long_utility.csv")


p1 <- ggplot( eth_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = close_ema)) + labs(x = NULL, y = "Close EMA")

p2 <- ggplot( eth_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = long_utility)) + labs(x = NULL, y = "Long Utility")

p3 <- ggplot( eth_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = long_utility_context_ema)) + labs(x = NULL, y = "Long Utility (scaled)")

pw <- p1 / p2 / p3
pw +plot_annotation(
  title = "Utility Labeling for ETH 1-hour",
  subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
  caption = "Data from Binance.com"
)
```

```{r}
#| label: ETH utility label uptrend chart

eth_long_utility <- read_csv("data/labeled/ETH_USDT_1hr_0.5_0.3_1_8_2_long_utility.csv")
eth_long_utility <- eth_long_utility %>% 
  filter(close_time_parsed >= ymd("2021-04-20") & close_time_parsed <= ymd("2021-05-10"))

p1 <- ggplot( eth_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = close_ema)) + labs(x = NULL, y = "Close EMA")

p2 <- ggplot( eth_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = long_utility)) + labs(x = NULL, y = "Long Utility")

p3 <- ggplot( eth_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = long_utility_context_ema)) + labs(x = NULL, y = "Long Utility (scaled)")

pw <- p1 / p2 / p3
pw +plot_annotation(
  title = "Utility Labeling for ETH 1-hour (uptrend)",
  subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
  caption = "Data from Binance.com"
)
```

```{r}
#| label: ETH utility label downtrend chart

eth_long_utility <- read_csv("data/labeled/ETH_USDT_1hr_0.5_0.3_1_8_2_long_utility.csv")
eth_long_utility <- eth_long_utility %>% 
  filter(close_time_parsed >= ymd("2021-05-10") & close_time_parsed <= ymd("2021-05-30"))

p1 <- ggplot( eth_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = close_ema)) + labs(x = NULL, y = "Close EMA")

p2 <- ggplot( eth_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = long_utility)) + labs(x = NULL, y = "Long Utility")

p3 <- ggplot( eth_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = long_utility_context_ema)) + labs(x = NULL, y = "Long Utility (scaled)")

pw <- p1 / p2 / p3
pw +plot_annotation(
  title = "Utility Labeling for ETH 1-hour (downtrend)",
  subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
  caption = "Data from Binance.com"
)
```

### ADA
```{r}
#| label: ADA full utility label chart

ada_long_utility <- read_csv("data/labeled/ADA_USDT_1hr_0.5_0.3_1_8_2_long_utility.csv")


p1 <- ggplot( ada_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = close_ema)) + labs(x = NULL, y = "Close EMA")

p2 <- ggplot( ada_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = long_utility)) + labs(x = NULL, y = "Long Utility")

p3 <- ggplot( ada_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = long_utility_context_ema)) + labs(x = NULL, y = "Long Utility (scaled)")

pw <- p1 / p2 / p3
pw +plot_annotation(
  title = "Utility Labeling for ADA 1-hour",
  subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
  caption = "Data from Binance.com"
)
```

```{r}
#| label: ADA utility label uptrend chart

ada_long_utility <- read_csv("data/labeled/ADA_USDT_1hr_0.5_0.3_1_8_2_long_utility.csv")
ada_long_utility <- ada_long_utility %>% 
  filter(close_time_parsed >= ymd("2021-04-25") & close_time_parsed <= ymd("2021-05-15"))

p1 <- ggplot( ada_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = close_ema)) + labs(x = NULL, y = "Close EMA")

p2 <- ggplot( ada_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = long_utility)) + labs(x = NULL, y = "Long Utility")

p3 <- ggplot( ada_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = long_utility_context_ema)) + labs(x = NULL, y = "Long Utility (scaled)")

pw <- p1 / p2 / p3
pw +plot_annotation(
  title = "Utility Labeling for ADA 1-hour (uptrend)",
  subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
  caption = "Data from Binance.com"
)
```

```{r}
#| label: ADA utility label downtrend chart

ada_long_utility <- read_csv("data/labeled/ADA_USDT_1hr_0.5_0.3_1_8_2_long_utility.csv")
ada_long_utility <- ada_long_utility %>% 
  filter(close_time_parsed >= ymd("2021-05-15") & close_time_parsed <= ymd("2021-06-05"))

p1 <- ggplot( ada_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = close_ema)) + labs(x = NULL, y = "Close EMA")

p2 <- ggplot( ada_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = long_utility)) + labs(x = NULL, y = "Long Utility")

p3 <- ggplot( ada_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = long_utility_context_ema)) + labs(x = NULL, y = "Long Utility (scaled)")

pw <- p1 / p2 / p3
pw +plot_annotation(
  title = "Utility Labeling for ADA 1-hour (downtrend)",
  subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
  caption = "Data from Binance.com"
)
```

### DOGE
```{r}
#| label: DOGE full utility label chart

ada_long_utility <- read_csv("data/labeled/DOGE_USDT_1hr_0.5_0.3_1_8_2_long_utility.csv")


p1 <- ggplot( ada_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = close_ema)) + labs(x = NULL, y = "Close EMA")

p2 <- ggplot( ada_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = long_utility)) + labs(x = NULL, y = "Long Utility")

p3 <- ggplot( ada_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = long_utility_context_ema)) + labs(x = NULL, y = "Long Utility (scaled)")

pw <- p1 / p2 / p3
pw +plot_annotation(
  title = "Utility Labeling for DOGE 1-hour",
  subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
  caption = "Data from Binance.com"
)
```

```{r}
#| label: DOGE utility label uptrend chart

ada_long_utility <- read_csv("data/labeled/DOGE_USDT_1hr_0.5_0.3_1_8_2_long_utility.csv")
ada_long_utility <- ada_long_utility %>% 
  filter(close_time_parsed >= ymd("2021-04-20") & close_time_parsed <= ymd("2021-05-10"))

p1 <- ggplot( ada_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = close_ema)) + labs(x = NULL, y = "Close EMA")

p2 <- ggplot( ada_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = long_utility)) + labs(x = NULL, y = "Long Utility")

p3 <- ggplot( ada_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = long_utility_context_ema)) + labs(x = NULL, y = "Long Utility (scaled)")

pw <- p1 / p2 / p3
pw +plot_annotation(
  title = "Utility Labeling for DOGE 1-hour (uptrend)",
  subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
  caption = "Data from Binance.com"
)
```

```{r}
#| label: DOGE utility label downtrend chart

ada_long_utility <- read_csv("data/labeled/DOGE_USDT_1hr_0.5_0.3_1_8_2_long_utility.csv")
ada_long_utility <- ada_long_utility %>% 
  filter(close_time_parsed >= ymd("2021-05-15") & close_time_parsed <= ymd("2021-06-05"))

p1 <- ggplot( ada_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = close_ema)) + labs(x = NULL, y = "Close EMA")

p2 <- ggplot( ada_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = long_utility)) + labs(x = NULL, y = "Long Utility")

p3 <- ggplot( ada_long_utility,aes(x = close_time_parsed)) +
  geom_line(aes (y = long_utility_context_ema)) + labs(x = NULL, y = "Long Utility (scaled)")

pw <- p1 / p2 / p3
pw +plot_annotation(
  title = "Utility Labeling for DOGE 1-hour (downtrend)",
  subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
  caption = "Data from Binance.com"
)
```

## Training
### BTC
```{r}
#| label: BTC training progress
btc_training <- read.csv("data/training/BTC_USDT_1hr_0.5_0.3_1_8_2_training.csv")

btc_training <- pivot_longer(
    btc_training, 
    cols=c("mean_absolute_error", "val_loss", "val_mean_absolute_error", "loss"),
    names_to = 'type'
  )
ggplot(
    btc_training, 
    aes(x = X)
  ) +
  geom_line(
    aes(
        y = value,
        color = type
      )
  ) +
  labs(
    x = "Epochs",
    y = "Values",
    color = "Metrics",
    title = "Training Progress for BTC 1-hour",
    subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
    caption = "Data from Binance.com"
  ) +
  theme(
    legend.position = "bottom"
  )
```

```{r}
#| label: BTC prediction

btc_prediction <- read.csv("data/training/BTC_USDT_1hr_0.5_0.3_1_8_2_prediction.csv")
btc_prediction <- pivot_longer(
    btc_prediction, 
    cols=c("test", "prediction"), 
    names_to = "type"
  )

ggplot(
    btc_prediction,
  ) +
  geom_line(
    aes(
      x = X,
      y = value,
      color = type
    )
  ) +
  labs(
    x = "Trading session",
    y = "Long Utility (scaled)",
    color = "Long Utility type",
    title = "Long Utility Prediction for BTC 1-hour",
    subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
    caption = "Data from Binance.com"
  ) +
  theme(
    legend.position = "bottom"
  )
```

### ETH
```{r}
#| label: ETH training progress
eth_training <- read.csv("data/training/ETH_USDT_1hr_0.5_0.3_1_8_2_training.csv")

eth_training <- pivot_longer(
    eth_training, 
    cols=c("mean_absolute_error", "val_loss", "val_mean_absolute_error", "loss"),
    names_to = 'type'
  )
ggplot(
    eth_training, 
    aes(x = X)
  ) +
  geom_line(
    aes(
        y = value,
        color = type
      )
  ) +
  labs(
    x = "Epochs",
    y = "Values",
    color = "Metrics",
    title = "Training Progress for ETH 1-hour",
    subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
    caption = "Data from Binance.com"
  ) +
  theme(
    legend.position = "bottom"
  )
```

```{r}
#| label: ETH prediction

eth_prediction <- read.csv("data/training/ETH_USDT_1hr_0.5_0.3_1_8_2_prediction.csv")
eth_prediction <- pivot_longer(
    eth_prediction, 
    cols=c("test", "prediction"), 
    names_to = "type"
  )

ggplot(
    eth_prediction,
  ) +
  geom_line(
    aes(
      x = X,
      y = value,
      color = type
    )
  ) +
  labs(
    x = "Trading session",
    y = "Long Utility (scaled)",
    color = "Long Utility type",
    title = "Long Utility Prediction for ETH 1-hour",
    subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
    caption = "Data from Binance.com"
  ) +
  theme(
    legend.position = "bottom"
  )
```

### ADA
```{r}
#| label: ADA training progress
ada_training <- read.csv("data/training/ADA_USDT_1hr_0.5_0.3_1_8_2_training.csv")

ada_training <- pivot_longer(
    ada_training, 
    cols=c("mean_absolute_error", "val_loss", "val_mean_absolute_error", "loss"),
    names_to = 'type'
  )
ggplot(
    ada_training, 
    aes(x = X)
  ) +
  geom_line(
    aes(
        y = value,
        color = type
      )
  ) +
  labs(
    x = "Epochs",
    y = "Values",
    color = "Metrics",
    title = "Training Progress for ADA 1-hour",
    subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
    caption = "Data from Binance.com"
  ) +
  theme(
    legend.position = "bottom"
  )
```

```{r}
#| label: ADA prediction

ada_prediction <- read.csv("data/training/ADA_USDT_1hr_0.5_0.3_1_8_2_prediction.csv")
ada_prediction <- pivot_longer(
    ada_prediction, 
    cols=c("test", "prediction"), 
    names_to = "type"
  )

ggplot(
    ada_prediction,
  ) +
  geom_line(
    aes(
      x = X,
      y = value,
      color = type
    )
  ) +
  labs(
    x = "Trading session",
    y = "Long Utility (scaled)",
    color = "Long Utility type",
    title = "Long Utility Prediction for ADA 1-hour",
    subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
    caption = "Data from Binance.com"
  ) +
  theme(
    legend.position = "bottom"
  )
```

### DOGE
```{r}
#| label: DOGE training progress
doge_training <- read.csv("data/training/DOGE_USDT_1hr_0.5_0.3_1_8_2_training.csv")

doge_training <- pivot_longer(
    doge_training, 
    cols=c("mean_absolute_error", "val_loss", "val_mean_absolute_error", "loss"),
    names_to = 'type'
  )
ggplot(
    doge_training, 
    aes(x = X)
  ) +
  geom_line(
    aes(
        y = value,
        color = type
      )
  ) +
  labs(
    x = "Epochs",
    y = "Values",
    color = "Metrics",
    title = "Training Progress for DOGE 1-hour",
    subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
    caption = "Data from Binance.com"
  ) +
  theme(
    legend.position = "bottom"
  )
```

```{r}
#| label: DOGE prediction

doge_prediction <- read.csv("data/training/DOGE_USDT_1hr_0.5_0.3_1_8_2_prediction.csv")
doge_prediction <- pivot_longer(
    doge_prediction, 
    cols=c("test", "prediction"), 
    names_to = "type"
  )

ggplot(
    doge_prediction,
  ) +
  geom_line(
    aes(
      x = X,
      y = value,
      color = type
    )
  ) +
  labs(
    x = "Trading session",
    y = "Long Utility (scaled)",
    color = "Long Utility type",
    title = "Long Utility Prediction for DOGE 1-hour",
    subtitle = "alpah = 0.5, trend reversal factor = 0.3, forward term = 8",
    caption = "Data from Binance.com"
  ) +
  theme(
    legend.position = "bottom"
  )
```